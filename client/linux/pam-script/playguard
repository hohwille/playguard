#!/bin/bash
#
#	PAM_SERVICE	- the application that's invoking the PAM stack
#	PAM_TYPE	- the module-type (e.g. auth,account,session,password)
#	PAM_USER	- the user being authenticated into
#	PAM_RUSER	- the remote user, the user invoking the application
#	PAM_RHOST	- remote host
#	PAM_TTY		- the controlling tty
#	PAM_AUTHTOK	- password in readable text
#
function log() {
  echo `date '+%Y-%m-%d_%H:%M:%S'` $script for user $PAM_USER: $@ >> /var/log/playguard.log
}

function fail() {
  log $@
  echo $@ >> /dev/stderr
  export PAM_SCRIPT_STATUS=1
}

PAM_SCRIPT_STATUS=0
if [ "$PAM_SERVICE" != "su" ] && [ "$PAM_SERVICE" != "sudo" ] && [ -n "$PAM_USER" ]
then
  script=`basename $0`
  source /etc/playguard/password.conf
  pwd=${password[$PAM_USER]}
  if [ -n "$pwd" ]
  then
    . /etc/playguard/playguard.conf
    command=undefined
    if [ $script == "pam_script_ses_open" ]
    then
      command=login
    elif [ $script == "pam_script_auth" ]
    then
      command=login
    elif [ $script == "pam_script_acct" ]
    then
      command=login
    elif [ $script == "pam_script_ses_close" ]
    then
      command=logout
    fi
    log  "$command event"
    result=`curl -k -s -u $PAM_USER:$pwd $url/event.php?cmd=$command\&src=$source 2>&1`
    error=$?
    if [ "$error" != 0 ]
    then
      msg="CURL failed with exit code $error and result: $result"
      if [ "$command" == "login" ]
      then
        fail $msg
      else
        log $msg
      fi
    elif [ "$command" == "login" ] && [ "$result" -lt "$minSecondsLeft" ]
    then
      fail "Only $result seconds left to play. Login denied"
    fi
  fi
  log "exiting with code $PAM_SCRIPT_STATUS"
fi
exit $PAM_SCRIPT_STATUS
